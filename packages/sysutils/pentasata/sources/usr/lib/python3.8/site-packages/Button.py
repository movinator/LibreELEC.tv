#/usr/bin/env python3
#
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2021 movinator (movinator@github.com)
# Copyright (C) 2019-present Team LibreELEC (https://libreelec.tv)
#
# project: support for penta-sata-tower from radxa
# purpose: as radxa uses dependencies that I couldn't port to LE
#          I wrote this class to use gpio through sysfs
import os
import time

class PushButton:
    def __init__(self, pin):
        self.gpio_base    = '/sys/class/gpio'
        self.button_base  = '/sys/class/gpio/gpio' + str(pin)
        self.button_value = self.button_base + '/value'
        if not os.path.exists(self.button_base):
            try:
                f = open(self.gpio_base + '/export', 'w')
                f.write(str(pin))
            except:
                pass


    def get_value(self):
        try:
            with open(self.button_value, 'r') as f:
                v = int(f.read().strip())
        except:
            pass
        return v


    def read_key(self):
        kp0 = 0
        dl0 = 0
        while True:
            if not self.get_value():
                t0 = time.time()
                while not self.get_value():
                    time.sleep(0.1)
                t1 = time.time()
                if (t1 - t0) < 0.1:
                    continue
                kp1 = t1 - t0;
                if kp1 > 2:
                    return 3
                if kp0 > 0.1:
                    if dl0 < 0.8:
                        return 2
                    else:
                        return 1
                else:
                    kp0 = kp1
                    dl0 = 0
            else:
                dl0 += 0.1
                if kp0 > 0.1 and dl0 > 0.8:
                    return 1
            time.sleep(0.05)


if __name__ == '__main__':
    pb = PushButton(146)
    while True:
        k = pb.read_key()
        print('got key-type: ' + str(k))
        time.sleep(1)
